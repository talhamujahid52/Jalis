{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Downloads\\\\Latest_themeforest-Tripfinder-react-next-Template\\\\TripFinder - React Next Hotel Template\\\\TripFinder\\\\packages\\\\hotel\\\\src\\\\components\\\\Map\\\\ListingPageMap.js\";\nimport React, { useState } from 'react';\nimport { Marker } from '@react-google-maps/api';\nimport HotelInfoWindow from './MapInfoWindow';\nimport MakerImage from './hotelMapMarker.png';\n\nconst HotelMapMarkerCluster = _ref => {\n  let {\n    location,\n    clusterer\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [markerIndex, setMarkerIndex] = useState(0);\n  let hotelData = [];\n\n  const infoWindowToggle = index => {\n    setIsOpen(!isOpen);\n    setMarkerIndex(index);\n  };\n\n  location && location.forEach(item => {\n    hotelData.push({\n      id: item.id,\n      lat: parseFloat(item.location.lat),\n      lng: parseFloat(item.location.lng),\n      title: item.title,\n      thumbUrl: item.image.thumb_url,\n      formattedAddress: item.location.formattedAddress,\n      price: item.price,\n      rating: item.rating,\n      ratingCount: item.ratingCount\n    });\n  });\n  return hotelData.map((singlePostLocation, index) => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: index,\n      icon: MakerImage,\n      clusterer: clusterer,\n      position: singlePostLocation,\n      onClick: () => infoWindowToggle(singlePostLocation.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, isOpen && markerIndex === singlePostLocation.id ? /*#__PURE__*/React.createElement(HotelInfoWindow, {\n      data: singlePostLocation,\n      onCloseClick: () => infoWindowToggle(singlePostLocation.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }) : '');\n  });\n};\n\nexport default HotelMapMarkerCluster;","map":{"version":3,"sources":["C:/Users/Talha/Downloads/Latest_themeforest-Tripfinder-react-next-Template/TripFinder - React Next Hotel Template/TripFinder/packages/hotel/src/components/Map/ListingPageMap.js"],"names":["React","useState","Marker","HotelInfoWindow","MakerImage","HotelMapMarkerCluster","location","clusterer","isOpen","setIsOpen","markerIndex","setMarkerIndex","hotelData","infoWindowToggle","index","forEach","item","push","id","lat","parseFloat","lng","title","thumbUrl","image","thumb_url","formattedAddress","price","rating","ratingCount","map","singlePostLocation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,qBAAqB,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA4B;AACzD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,MAAIW,SAAS,GAAG,EAAhB;;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,cAAc,CAACG,KAAD,CAAd;AACD,GAHD;;AAKAR,EAAAA,QAAQ,IACNA,QAAQ,CAACS,OAAT,CAAkBC,IAAD,IAAU;AACzBJ,IAAAA,SAAS,CAACK,IAAV,CAAe;AACbC,MAAAA,EAAE,EAAEF,IAAI,CAACE,EADI;AAEbC,MAAAA,GAAG,EAAEC,UAAU,CAACJ,IAAI,CAACV,QAAL,CAAca,GAAf,CAFF;AAGbE,MAAAA,GAAG,EAAED,UAAU,CAACJ,IAAI,CAACV,QAAL,CAAce,GAAf,CAHF;AAIbC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KAJC;AAKbC,MAAAA,QAAQ,EAAEP,IAAI,CAACQ,KAAL,CAAWC,SALR;AAMbC,MAAAA,gBAAgB,EAAEV,IAAI,CAACV,QAAL,CAAcoB,gBANnB;AAObC,MAAAA,KAAK,EAAEX,IAAI,CAACW,KAPC;AAQbC,MAAAA,MAAM,EAAEZ,IAAI,CAACY,MARA;AASbC,MAAAA,WAAW,EAAEb,IAAI,CAACa;AATL,KAAf;AAWD,GAZD,CADF;AAeA,SAAOjB,SAAS,CAACkB,GAAV,CAAc,CAACC,kBAAD,EAAqBjB,KAArB,KAA+B;AAClD,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAEV,UAFR;AAGE,MAAA,SAAS,EAAEG,SAHb;AAIE,MAAA,QAAQ,EAAEwB,kBAJZ;AAKE,MAAA,OAAO,EAAE,MAAMlB,gBAAgB,CAACkB,kBAAkB,CAACb,EAApB,CALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGV,MAAM,IAAIE,WAAW,KAAKqB,kBAAkB,CAACb,EAA7C,gBACC,oBAAC,eAAD;AACE,MAAA,IAAI,EAAEa,kBADR;AAEE,MAAA,YAAY,EAAE,MAAMlB,gBAAgB,CAACkB,kBAAkB,CAACb,EAApB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC,EAbJ,CADF;AAkBD,GAnBM,CAAP;AAoBD,CA7CD;;AA+CA,eAAeb,qBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Marker } from '@react-google-maps/api';\nimport HotelInfoWindow from './MapInfoWindow';\nimport MakerImage from './hotelMapMarker.png';\n\nconst HotelMapMarkerCluster = ({ location, clusterer }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [markerIndex, setMarkerIndex] = useState(0);\n  let hotelData = [];\n\n  const infoWindowToggle = (index) => {\n    setIsOpen(!isOpen);\n    setMarkerIndex(index);\n  };\n\n  location &&\n    location.forEach((item) => {\n      hotelData.push({\n        id: item.id,\n        lat: parseFloat(item.location.lat),\n        lng: parseFloat(item.location.lng),\n        title: item.title,\n        thumbUrl: item.image.thumb_url,\n        formattedAddress: item.location.formattedAddress,\n        price: item.price,\n        rating: item.rating,\n        ratingCount: item.ratingCount,\n      });\n    });\n\n  return hotelData.map((singlePostLocation, index) => {\n    return (\n      <Marker\n        key={index}\n        icon={MakerImage}\n        clusterer={clusterer}\n        position={singlePostLocation}\n        onClick={() => infoWindowToggle(singlePostLocation.id)}\n      >\n        {isOpen && markerIndex === singlePostLocation.id ? (\n          <HotelInfoWindow\n            data={singlePostLocation}\n            onCloseClick={() => infoWindowToggle(singlePostLocation.id)}\n          />\n        ) : (\n          ''\n        )}\n      </Marker>\n    );\n  });\n};\n\nexport default HotelMapMarkerCluster;\n"]},"metadata":{},"sourceType":"module"}