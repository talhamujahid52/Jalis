{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Desktop\\\\hotel\\\\src\\\\container\\\\Layout\\\\Header\\\\NavbarSearch.js\";\nimport React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport { withRouter } from 'react-router-dom';\nimport { FiSearch } from 'react-icons/fi';\nimport MapAutoComplete from 'components/Map/MapAutoComplete';\nimport { setStateToUrl, getStateFromUrl } from 'library/helpers/url_handler';\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport { LISTING_POSTS_PAGE } from 'settings/constant';\nimport { NavbarSearchWrapper } from './Header.style';\n\nconst NavbarSearch = props => {\n  const updateValueFunc = value => {\n    const {\n      searchedPlaceAPIData\n    } = value;\n    let tempLocation = [];\n    const mapData = !isEmpty(searchedPlaceAPIData) ? mapDataHelper(searchedPlaceAPIData) : [];\n\n    if (!isEmpty(mapData) && mapData.length !== 0) {\n      mapData.forEach(singleMapData => tempLocation.push({\n        lat: singleMapData ? singleMapData.lat.toFixed(3) : null,\n        lng: singleMapData ? singleMapData.lng.toFixed(3) : null\n      }));\n    }\n\n    const searchLocation = tempLocation ? tempLocation[0] : {};\n\n    if (!isEmpty(searchLocation)) {\n      const state = getStateFromUrl(props.location);\n      const query = { ...state,\n        location: searchLocation\n      };\n      const search = setStateToUrl(query);\n      props.history.push({\n        pathname: LISTING_POSTS_PAGE,\n        search: search\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(NavbarSearchWrapper, {\n    className: \"navbar_search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapAutoComplete, {\n    updateValue: value => updateValueFunc(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FiSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default withRouter(NavbarSearch);","map":{"version":3,"sources":["C:/Users/Talha/Desktop/hotel/src/container/Layout/Header/NavbarSearch.js"],"names":["React","isEmpty","withRouter","FiSearch","MapAutoComplete","setStateToUrl","getStateFromUrl","mapDataHelper","LISTING_POSTS_PAGE","NavbarSearchWrapper","NavbarSearch","props","updateValueFunc","value","searchedPlaceAPIData","tempLocation","mapData","length","forEach","singleMapData","push","lat","toFixed","lng","searchLocation","state","location","query","search","history","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,6BAA/C;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,mBAAT,QAAoC,gBAApC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAA2BD,KAAjC;AACA,QAAIE,YAAY,GAAG,EAAnB;AACA,UAAMC,OAAO,GAAG,CAACf,OAAO,CAACa,oBAAD,CAAR,GACZP,aAAa,CAACO,oBAAD,CADD,GAEZ,EAFJ;;AAGA,QAAI,CAACb,OAAO,CAACe,OAAD,CAAR,IAAqBA,OAAO,CAACC,MAAR,KAAmB,CAA5C,EAA+C;AAC7CD,MAAAA,OAAO,CAACE,OAAR,CAAiBC,aAAD,IACdJ,YAAY,CAACK,IAAb,CAAkB;AAChBC,QAAAA,GAAG,EAAEF,aAAa,GAAGA,aAAa,CAACE,GAAd,CAAkBC,OAAlB,CAA0B,CAA1B,CAAH,GAAkC,IADpC;AAEhBC,QAAAA,GAAG,EAAEJ,aAAa,GAAGA,aAAa,CAACI,GAAd,CAAkBD,OAAlB,CAA0B,CAA1B,CAAH,GAAkC;AAFpC,OAAlB,CADF;AAMD;;AACD,UAAME,cAAc,GAAGT,YAAY,GAAGA,YAAY,CAAC,CAAD,CAAf,GAAqB,EAAxD;;AACA,QAAI,CAACd,OAAO,CAACuB,cAAD,CAAZ,EAA8B;AAC5B,YAAMC,KAAK,GAAGnB,eAAe,CAACK,KAAK,CAACe,QAAP,CAA7B;AACA,YAAMC,KAAK,GAAG,EACZ,GAAGF,KADS;AAEZC,QAAAA,QAAQ,EAAEF;AAFE,OAAd;AAIA,YAAMI,MAAM,GAAGvB,aAAa,CAACsB,KAAD,CAA5B;AACAhB,MAAAA,KAAK,CAACkB,OAAN,CAAcT,IAAd,CAAmB;AACjBU,QAAAA,QAAQ,EAAEtB,kBADO;AAEjBoB,QAAAA,MAAM,EAAEA;AAFS,OAAnB;AAID;AACF,GA3BD;;AA6BA,sBACE,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAGf,KAAD,IAAWD,eAAe,CAACC,KAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CApCD;;AAsCA,eAAeX,UAAU,CAACQ,YAAD,CAAzB","sourcesContent":["import React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport { withRouter } from 'react-router-dom';\nimport { FiSearch } from 'react-icons/fi';\nimport MapAutoComplete from 'components/Map/MapAutoComplete';\nimport { setStateToUrl, getStateFromUrl } from 'library/helpers/url_handler';\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport { LISTING_POSTS_PAGE } from 'settings/constant';\nimport { NavbarSearchWrapper } from './Header.style';\n\nconst NavbarSearch = (props) => {\n  const updateValueFunc = (value) => {\n    const { searchedPlaceAPIData } = value;\n    let tempLocation = [];\n    const mapData = !isEmpty(searchedPlaceAPIData)\n      ? mapDataHelper(searchedPlaceAPIData)\n      : [];\n    if (!isEmpty(mapData) && mapData.length !== 0) {\n      mapData.forEach((singleMapData) =>\n        tempLocation.push({\n          lat: singleMapData ? singleMapData.lat.toFixed(3) : null,\n          lng: singleMapData ? singleMapData.lng.toFixed(3) : null,\n        })\n      );\n    }\n    const searchLocation = tempLocation ? tempLocation[0] : {};\n    if (!isEmpty(searchLocation)) {\n      const state = getStateFromUrl(props.location);\n      const query = {\n        ...state,\n        location: searchLocation,\n      };\n      const search = setStateToUrl(query);\n      props.history.push({\n        pathname: LISTING_POSTS_PAGE,\n        search: search,\n      });\n    }\n  };\n\n  return (\n    <NavbarSearchWrapper className=\"navbar_search\">\n      <MapAutoComplete updateValue={(value) => updateValueFunc(value)} />\n      <FiSearch />\n    </NavbarSearchWrapper>\n  );\n};\n\nexport default withRouter(NavbarSearch);\n"]},"metadata":{},"sourceType":"module"}