{"ast":null,"code":"// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nexport default function Portal(_ref) {\n  let {\n    children,\n    rendererId\n  } = _ref;\n  const [containerEl] = useState(document.createElement('div'));\n  useEffect(() => {\n    let portalRoot = document.getElementById(rendererId) || document.body;\n    portalRoot.appendChild(containerEl);\n    return () => portalRoot.removeChild(containerEl);\n  });\n  return ReactDOM.createPortal(children, containerEl);\n}","map":{"version":3,"sources":["C:/Users/Talha/Downloads/Latest_themeforest-Tripfinder-react-next-Template/TripFinder - React Next Hotel Template/TripFinder/packages/hotel/src/components/UI/Portal/Portal.js"],"names":["useState","useEffect","ReactDOM","Portal","children","rendererId","containerEl","document","createElement","portalRoot","getElementById","body","appendChild","removeChild","createPortal"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,eAAe,SAASC,MAAT,OAA0C;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA0B;AACvD,QAAM,CAACC,WAAD,IAAgBN,QAAQ,CAACO,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAD,CAA9B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,UAAU,GAAGF,QAAQ,CAACG,cAAT,CAAwBL,UAAxB,KAAuCE,QAAQ,CAACI,IAAjE;AACAF,IAAAA,UAAU,CAACG,WAAX,CAAuBN,WAAvB;AACA,WAAO,MAAMG,UAAU,CAACI,WAAX,CAAuBP,WAAvB,CAAb;AACD,GAJQ,CAAT;AAKA,SAAOJ,QAAQ,CAACY,YAAT,CAAsBV,QAAtB,EAAgCE,WAAhC,CAAP;AACD","sourcesContent":["// The portal element is inserted in the DOM tree after\n// the Modal's children are mounted, meaning that children\n// will be mounted on a detached DOM node. If a child\n// component requires to be attached to the DOM tree\n// immediately when mounted, for example to measure a\n// DOM node, or uses 'autoFocus' in a descendant, add\n// state to Modal and only render the children when Modal\n// is inserted in the DOM tree.\n\nimport { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default function Portal({ children, rendererId }) {\n  const [containerEl] = useState(document.createElement('div'));\n  useEffect(() => {\n    let portalRoot = document.getElementById(rendererId) || document.body;\n    portalRoot.appendChild(containerEl);\n    return () => portalRoot.removeChild(containerEl);\n  });\n  return ReactDOM.createPortal(children, containerEl);\n}\n"]},"metadata":{},"sourceType":"module"}