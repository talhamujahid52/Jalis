{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Downloads\\\\Latest_themeforest-Tripfinder-react-next-Template\\\\TripFinder - React Next Hotel Template\\\\TripFinder\\\\packages\\\\hotel\\\\src\\\\components\\\\IconCard\\\\IconCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconCardWrapper, { IconWrapper, TitleArea } from './IconCard.style';\n\nconst IconCard = _ref => {\n  let {\n    icon,\n    title,\n    align,\n    className\n  } = _ref;\n  // Add all classs to an array\n  const addAllClasses = ['icon_card']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return /*#__PURE__*/React.createElement(IconCardWrapper, {\n    className: addAllClasses.join(' '),\n    align: align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, icon && /*#__PURE__*/React.createElement(IconWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }\n  }, icon), title && /*#__PURE__*/React.createElement(TitleArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, title));\n};\n\nIconCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  icon: PropTypes.element\n};\nexport default IconCard;","map":{"version":3,"sources":["C:/Users/Talha/Downloads/Latest_themeforest-Tripfinder-react-next-Template/TripFinder - React Next Hotel Template/TripFinder/packages/hotel/src/components/IconCard/IconCard.js"],"names":["React","PropTypes","IconCardWrapper","IconWrapper","TitleArea","IconCard","icon","title","align","className","addAllClasses","push","join","propTypes","string","element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,IAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,kBAAxD;;AAEA,MAAMC,QAAQ,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAAsC;AACtD;AACA,QAAMC,aAAa,GAAG,CAAC,WAAD,CAAtB,CAFsD,CAItD;;AACA,MAAID,SAAJ,EAAe;AACbC,IAAAA,aAAa,CAACC,IAAd,CAAmBF,SAAnB;AACD;;AAED,sBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEC,aAAa,CAACE,IAAd,CAAmB,GAAnB,CAA5B;AAAqD,IAAA,KAAK,EAAEJ,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,iBAAI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,IAAd,CADX,EAEGC,KAAK,iBAAI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAZ,CAFZ,CADF;AAMD,CAfD;;AAiBAF,QAAQ,CAACQ,SAAT,GAAqB;AACnBJ,EAAAA,SAAS,EAAER,SAAS,CAACa,MADF;AAEnBP,EAAAA,KAAK,EAAEN,SAAS,CAACa,MAFE;AAGnBR,EAAAA,IAAI,EAAEL,SAAS,CAACc;AAHG,CAArB;AAMA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconCardWrapper, { IconWrapper, TitleArea } from './IconCard.style';\n\nconst IconCard = ({ icon, title, align, className }) => {\n  // Add all classs to an array\n  const addAllClasses = ['icon_card'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <IconCardWrapper className={addAllClasses.join(' ')} align={align}>\n      {icon && <IconWrapper>{icon}</IconWrapper>}\n      {title && <TitleArea>{title}</TitleArea>}\n    </IconCardWrapper>\n  );\n};\n\nIconCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  icon: PropTypes.element,\n};\n\nexport default IconCard;\n"]},"metadata":{},"sourceType":"module"}