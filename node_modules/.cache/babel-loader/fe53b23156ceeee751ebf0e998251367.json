{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Downloads\\\\Latest_themeforest-Tripfinder-react-next-Template\\\\TripFinder - React Next Hotel Template\\\\TripFinder\\\\packages\\\\hotel\\\\src\\\\components\\\\GridCard\\\\GridCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport GridCardWrapper, { ImageWrapper, FavoriteIcon, ContentWrapper, LocationArea, TitleArea, PriceArea, RatingArea, MetaWrapper, ButtonGroup } from './GridCard.style';\n\nconst GridCard = _ref => {\n  let {\n    className,\n    favorite,\n    location,\n    title,\n    price,\n    rating,\n    editBtn,\n    viewDetailsBtn,\n    children\n  } = _ref;\n  let classes = viewDetailsBtn || editBtn ? \"has_btn \".concat(className) : className;\n  return /*#__PURE__*/React.createElement(GridCardWrapper, {\n    className: \"grid_card \".concat(classes).trim(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImageWrapper, {\n    className: \"media_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, children), /*#__PURE__*/React.createElement(ContentWrapper, {\n    className: \"content_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, location && /*#__PURE__*/React.createElement(LocationArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  }, location), title && /*#__PURE__*/React.createElement(TitleArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, title), /*#__PURE__*/React.createElement(MetaWrapper, {\n    className: \"meta_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, price && /*#__PURE__*/React.createElement(PriceArea, {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, price), rating && /*#__PURE__*/React.createElement(RatingArea, {\n    className: \"rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }\n  }, rating), viewDetailsBtn || editBtn ? /*#__PURE__*/React.createElement(ButtonGroup, {\n    className: \"button_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, viewDetailsBtn, editBtn) : null)), favorite && /*#__PURE__*/React.createElement(FavoriteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }\n  }, favorite));\n};\n\nGridCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  price: PropTypes.string,\n  rating: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  editBtn: PropTypes.element,\n  viewDetailsBtn: PropTypes.element\n};\nexport default GridCard;","map":{"version":3,"sources":["C:/Users/Talha/Downloads/Latest_themeforest-Tripfinder-react-next-Template/TripFinder - React Next Hotel Template/TripFinder/packages/hotel/src/components/GridCard/GridCard.js"],"names":["React","PropTypes","GridCardWrapper","ImageWrapper","FavoriteIcon","ContentWrapper","LocationArea","TitleArea","PriceArea","RatingArea","MetaWrapper","ButtonGroup","GridCard","className","favorite","location","title","price","rating","editBtn","viewDetailsBtn","children","classes","trim","propTypes","string","oneOfType","element"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,IACEC,YADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,UAPF,EAQEC,WARF,EASEC,WATF,QAUO,kBAVP;;AAYA,MAAMC,QAAQ,GAAG,QAUX;AAAA,MAVY;AAChBC,IAAAA,SADgB;AAEhBC,IAAAA,QAFgB;AAGhBC,IAAAA,QAHgB;AAIhBC,IAAAA,KAJgB;AAKhBC,IAAAA,KALgB;AAMhBC,IAAAA,MANgB;AAOhBC,IAAAA,OAPgB;AAQhBC,IAAAA,cARgB;AAShBC,IAAAA;AATgB,GAUZ;AACJ,MAAIC,OAAO,GAAGF,cAAc,IAAID,OAAlB,qBAAuCN,SAAvC,IAAqDA,SAAnE;AACA,sBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAE,oBAAaS,OAAb,EAAuBC,IAAvB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCF,QAAzC,CADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QAAQ,iBAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,QAAf,CADf,EAEGC,KAAK,iBAAI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAZ,CAFZ,eAGE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,iBAAI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CADZ,EAEGC,MAAM,iBAAI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,MAAhC,CAFb,EAGGE,cAAc,IAAID,OAAlB,gBACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,cADH,EAEGD,OAFH,CADD,GAKG,IARN,CAHF,CAFF,EAiBGL,QAAQ,iBAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,QAAf,CAjBf,CADF;AAqBD,CAjCD;;AAmCAF,QAAQ,CAACY,SAAT,GAAqB;AACnBX,EAAAA,SAAS,EAAEZ,SAAS,CAACwB,MADF;AAEnBT,EAAAA,KAAK,EAAEf,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACwB,MAAX,EAAmBxB,SAAS,CAAC0B,OAA7B,CAApB,CAFY;AAGnBV,EAAAA,KAAK,EAAEhB,SAAS,CAACwB,MAHE;AAInBP,EAAAA,MAAM,EAAEjB,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACwB,MAAX,EAAmBxB,SAAS,CAAC0B,OAA7B,CAApB,CAJW;AAKnBZ,EAAAA,QAAQ,EAAEd,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACwB,MAAX,EAAmBxB,SAAS,CAAC0B,OAA7B,CAApB,CALS;AAMnBR,EAAAA,OAAO,EAAElB,SAAS,CAAC0B,OANA;AAOnBP,EAAAA,cAAc,EAAEnB,SAAS,CAAC0B;AAPP,CAArB;AAUA,eAAef,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport GridCardWrapper, {\n  ImageWrapper,\n  FavoriteIcon,\n  ContentWrapper,\n  LocationArea,\n  TitleArea,\n  PriceArea,\n  RatingArea,\n  MetaWrapper,\n  ButtonGroup,\n} from './GridCard.style';\n\nconst GridCard = ({\n  className,\n  favorite,\n  location,\n  title,\n  price,\n  rating,\n  editBtn,\n  viewDetailsBtn,\n  children,\n}) => {\n  let classes = viewDetailsBtn || editBtn ? `has_btn ${className}` : className;\n  return (\n    <GridCardWrapper className={`grid_card ${classes}`.trim()}>\n      <ImageWrapper className=\"media_wrapper\">{children}</ImageWrapper>\n      <ContentWrapper className=\"content_wrapper\">\n        {location && <LocationArea>{location}</LocationArea>}\n        {title && <TitleArea>{title}</TitleArea>}\n        <MetaWrapper className=\"meta_wrapper\">\n          {price && <PriceArea className=\"price\">{price}</PriceArea>}\n          {rating && <RatingArea className=\"rating\">{rating}</RatingArea>}\n          {viewDetailsBtn || editBtn ? (\n            <ButtonGroup className=\"button_group\">\n              {viewDetailsBtn}\n              {editBtn}\n            </ButtonGroup>\n          ) : null}\n        </MetaWrapper>\n      </ContentWrapper>\n\n      {favorite && <FavoriteIcon>{favorite}</FavoriteIcon>}\n    </GridCardWrapper>\n  );\n};\n\nGridCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  price: PropTypes.string,\n  rating: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  editBtn: PropTypes.element,\n  viewDetailsBtn: PropTypes.element,\n};\n\nexport default GridCard;\n"]},"metadata":{},"sourceType":"module"}