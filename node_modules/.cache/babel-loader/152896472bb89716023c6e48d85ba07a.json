{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Downloads\\\\Latest_themeforest-Tripfinder-react-next-Template\\\\TripFinder - React Next Hotel Template\\\\TripFinder\\\\packages\\\\hotel\\\\src\\\\components\\\\SectionGrid\\\\SectionGrid.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'components/UI/Box/Box';\nimport Text from 'components/UI/Text/Text';\nimport ProductCard from '../ProductCard/ProductCard';\n\nconst LoadMore = _ref => {\n  let {\n    handleLoadMore,\n    showButton,\n    buttonText,\n    loading,\n    loadMoreComponent,\n    loadMoreStyle\n  } = _ref;\n  return !!showButton && /*#__PURE__*/React.createElement(Box, Object.assign({\n    className: \"loadmore_wrapper\"\n  }, loadMoreStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), loadMoreComponent ? loadMoreComponent : /*#__PURE__*/React.createElement(_Button, {\n    loading: loading,\n    onClick: handleLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, buttonText || 'Load More'));\n};\n\nexport default function SectionGrid(_ref2) {\n  let {\n    data = [],\n    totalItem,\n    limit,\n    columnWidth,\n    paginationComponent,\n    handleLoadMore,\n    loadMoreComponent,\n    placeholder,\n    loading,\n    buttonText,\n    rowStyle,\n    columnStyle,\n    loadMoreStyle,\n    link\n  } = _ref2;\n  const n = limit ? Number(limit) : 1;\n  const limits = Array(n).fill(0);\n  let showButton = data.length < totalItem;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, Object.assign({\n    className: \"grid_wrapper\"\n  }, rowStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), data && data.length ? data.map(item => {\n    return /*#__PURE__*/React.createElement(Box, Object.assign({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: item.id\n    }, columnStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ProductCard, Object.assign({\n      link: link\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    })));\n  }) : null, loading && limits.map((_, index) => /*#__PURE__*/React.createElement(Box, Object.assign({\n    className: \"grid_column\",\n    width: columnWidth,\n    key: index\n  }, columnStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), placeholder ? placeholder : /*#__PURE__*/React.createElement(Text, {\n    content: \"Loading ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 44\n    }\n  })))), showButton && /*#__PURE__*/React.createElement(LoadMore, {\n    showButton: showButton,\n    handleLoadMore: handleLoadMore,\n    loading: loading,\n    buttonText: buttonText,\n    loadMoreComponent: loadMoreComponent,\n    loadMoreStyle: loadMoreStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), paginationComponent && /*#__PURE__*/React.createElement(Box, {\n    className: \"pagination_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, paginationComponent));\n}\nSectionGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object\n};\nSectionGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px']\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px']\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem'\n  }\n};","map":{"version":3,"sources":["C:/Users/Talha/Downloads/Latest_themeforest-Tripfinder-react-next-Template/TripFinder - React Next Hotel Template/TripFinder/packages/hotel/src/components/SectionGrid/SectionGrid.js"],"names":["React","PropTypes","Box","Text","ProductCard","LoadMore","handleLoadMore","showButton","buttonText","loading","loadMoreComponent","loadMoreStyle","SectionGrid","data","totalItem","limit","columnWidth","paginationComponent","placeholder","rowStyle","columnStyle","link","n","Number","limits","Array","fill","length","map","item","id","_","index","propTypes","array","isRequired","number","oneOfType","string","element","func","bool","object","defaultProps","flexBox","flexWrap","mr","ml","pr","pl","justifyContent","mt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport Box from 'components/UI/Box/Box';\nimport Text from 'components/UI/Text/Text';\nimport ProductCard from '../ProductCard/ProductCard';\nconst LoadMore = ({\n  handleLoadMore,\n  showButton,\n  buttonText,\n  loading,\n  loadMoreComponent,\n  loadMoreStyle,\n}) => {\n  return (\n    !!showButton && (\n      <Box className=\"loadmore_wrapper\" {...loadMoreStyle}>\n        {loadMoreComponent ? (\n          loadMoreComponent\n        ) : (\n          <Button loading={loading} onClick={handleLoadMore}>\n            {buttonText || 'Load More'}\n          </Button>\n        )}\n      </Box>\n    )\n  );\n};\n\nexport default function SectionGrid({\n  data = [],\n  totalItem,\n  limit,\n  columnWidth,\n  paginationComponent,\n  handleLoadMore,\n  loadMoreComponent,\n  placeholder,\n  loading,\n  buttonText,\n  rowStyle,\n  columnStyle,\n  loadMoreStyle,\n  link,\n}) {\n  const n = limit ? Number(limit) : 1;\n  const limits = Array(n).fill(0);\n\n  let showButton = data.length < totalItem;\n\n  return (\n    <>\n      <Box className=\"grid_wrapper\" {...rowStyle}>\n        {data && data.length\n          ? data.map((item) => {\n              return (\n                <Box\n                  className=\"grid_column\"\n                  width={columnWidth}\n                  key={item.id}\n                  {...columnStyle}\n                >\n                  <ProductCard link={link} {...item} />\n                </Box>\n              );\n            })\n          : null}\n\n        {loading &&\n          limits.map((_, index) => (\n            <Box\n              className=\"grid_column\"\n              width={columnWidth}\n              key={index}\n              {...columnStyle}\n            >\n              {placeholder ? placeholder : <Text content=\"Loading ...\" />}\n            </Box>\n          ))}\n      </Box>\n\n      {showButton && (\n        <LoadMore\n          showButton={showButton}\n          handleLoadMore={handleLoadMore}\n          loading={loading}\n          buttonText={buttonText}\n          loadMoreComponent={loadMoreComponent}\n          loadMoreStyle={loadMoreStyle}\n        />\n      )}\n      {paginationComponent && (\n        <Box className=\"pagination_wrapper\">{paginationComponent}</Box>\n      )}\n    </>\n  );\n}\n\nSectionGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object,\n};\n\nSectionGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px'],\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}