{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Desktop\\\\hotel\\\\src\\\\container\\\\AddListing\\\\HotelLocation.js\";\nimport React, { useState, useEffect } from 'react';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport MapWithSearchBox from 'components/Map/MapSearchBox';\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nconst HotelLocation = _ref => {\n  var _errors$contactNumber, _errors$contactNumber2;\n\n  let {\n    setStep\n  } = _ref;\n  let tempLocationData = [];\n  const [location, setLocation] = useState([]);\n  const {\n    control,\n    register,\n    errors,\n    setValue,\n    handleSubmit\n  } = useForm({\n    mode: 'onChange'\n  });\n  const {\n    action,\n    state\n  } = useStateMachine(AddListingAction);\n  useEffect(() => {\n    register({\n      name: 'locationData'\n    }, {\n      required: true\n    });\n  }, [register]);\n\n  const onSubmit = data => {\n    action(data);\n    setStep(4);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Step 3: Hotel Location\")), /*#__PURE__*/React.createElement(_Row, {\n    gutter: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Contact number\",\n    htmlFor: \"contactNumber\",\n    error: errors.contactNumber && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$contactNumber = errors.contactNumber) === null || _errors$contactNumber === void 0 ? void 0 : _errors$contactNumber.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, \"This field is required!\"), ((_errors$contactNumber2 = errors.contactNumber) === null || _errors$contactNumber2 === void 0 ? void 0 : _errors$contactNumber2.type) === 'pattern' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }\n    }, \"Please enter your valid number!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }),\n    id: \"contactNumber\",\n    name: \"contactNumber\",\n    defaultValue: state.data.contactNumber,\n    control: control,\n    placeholder: \"Phone\",\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Details description\",\n    htmlFor: \"locationDescription\",\n    error: errors.locationDescription && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }\n    }, \"This field is required!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input.TextArea, {\n      rows: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }),\n    id: \"locationDescription\",\n    name: \"locationDescription\",\n    defaultValue: state.data.locationDescription,\n    control: control,\n    placeholder: \"Write your hotel direction in details , it may help traveler to find your hotel easily\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    error: errors.locationData && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    }, \"This field is required!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MapWithSearchBox, {\n    name: \"locationData\",\n    updateValue: value => {\n      tempLocationData = mapDataHelper(value);\n      setValue('locationData', tempLocationData);\n      setLocation(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(FormAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    className: \"back-btn\",\n    htmlType: \"button\",\n    onClick: () => setStep(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IoIosArrowBack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), \" Back\"), /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n};\n\nexport default HotelLocation;","map":{"version":3,"sources":["C:/Users/Talha/Desktop/hotel/src/container/AddListing/HotelLocation.js"],"names":["React","useState","useEffect","IoIosArrowBack","useStateMachine","useForm","Controller","FormControl","MapWithSearchBox","mapDataHelper","AddListingAction","FormHeader","Title","FormContent","FormAction","HotelLocation","setStep","tempLocationData","location","setLocation","control","register","errors","setValue","handleSubmit","mode","action","state","name","required","onSubmit","data","contactNumber","type","pattern","locationDescription","locationData","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Input, Button } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport MapWithSearchBox from 'components/Map/MapSearchBox';\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nconst HotelLocation = ({ setStep }) => {\n  let tempLocationData = [];\n  const [location, setLocation] = useState([]);\n  const { control, register, errors, setValue, handleSubmit } = useForm({\n    mode: 'onChange',\n  });\n  const { action, state } = useStateMachine(AddListingAction);\n\n  useEffect(() => {\n    register({ name: 'locationData' }, { required: true });\n  }, [register]);\n\n  const onSubmit = (data) => {\n    action(data);\n    setStep(4);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormContent>\n        <FormHeader>\n          <Title>Step 3: Hotel Location</Title>\n        </FormHeader>\n        <Row gutter={30}>\n          <Col sm={12}>\n            <FormControl\n              label=\"Contact number\"\n              htmlFor=\"contactNumber\"\n              error={\n                errors.contactNumber && (\n                  <>\n                    {errors.contactNumber?.type === 'required' && (\n                      <span>This field is required!</span>\n                    )}\n                    {errors.contactNumber?.type === 'pattern' && (\n                      <span>Please enter your valid number!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                as={<Input />}\n                id=\"contactNumber\"\n                name=\"contactNumber\"\n                defaultValue={state.data.contactNumber}\n                control={control}\n                placeholder=\"Phone\"\n                rules={{\n                  required: true,\n                  pattern: /^[0-9]*$/,\n                }}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <FormControl\n          label=\"Details description\"\n          htmlFor=\"locationDescription\"\n          error={\n            errors.locationDescription && <span>This field is required!</span>\n          }\n        >\n          <Controller\n            as={<Input.TextArea rows={5} />}\n            id=\"locationDescription\"\n            name=\"locationDescription\"\n            defaultValue={state.data.locationDescription}\n            control={control}\n            placeholder=\"Write your hotel direction in details , it may help traveler to find your hotel easily\"\n            rules={{\n              required: true,\n            }}\n          />\n        </FormControl>\n        <FormControl\n          error={errors.locationData && <span>This field is required!</span>}\n        >\n          <MapWithSearchBox\n            name=\"locationData\"\n            updateValue={(value) => {\n              tempLocationData = mapDataHelper(value);\n              setValue('locationData', tempLocationData);\n              setLocation(value);\n            }}\n          />\n        </FormControl>\n      </FormContent>\n      <FormAction>\n        <div className=\"inner-wrapper\">\n          <Button\n            className=\"back-btn\"\n            htmlType=\"button\"\n            onClick={() => setStep(2)}\n          >\n            <IoIosArrowBack /> Back\n          </Button>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Next\n          </Button>\n        </div>\n      </FormAction>\n    </form>\n  );\n};\n\nexport default HotelLocation;\n"]},"metadata":{},"sourceType":"module"}