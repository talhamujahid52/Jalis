{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Desktop\\\\hotel\\\\src\\\\components\\\\UI\\\\Text\\\\Text.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { fontFamily, fontWeight, textAlign, lineHeight, letterSpacing } from 'styled-system';\nimport { base, themed } from '../Base';\nconst TextWrapper = styled('p')(base, fontFamily, fontWeight, textAlign, lineHeight, letterSpacing, themed('Text'));\n\nconst Text = _ref => {\n  let {\n    content,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }), content);\n};\n\nText.propTypes = {\n  content: PropTypes.string,\n  as: PropTypes.string,\n  fontFamily: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  fontWeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  textAlign: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  lineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  letterSpacing: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  ...base.propTypes\n};\nText.defaultProps = {\n  as: 'p',\n  m: 0\n};\nexport default Text;","map":{"version":3,"sources":["C:/Users/Talha/Desktop/hotel/src/components/UI/Text/Text.js"],"names":["React","PropTypes","styled","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","base","themed","TextWrapper","Text","content","props","propTypes","string","as","oneOfType","number","arrayOf","defaultProps","m"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,aALF,QAMO,eANP;AAOA,SAASC,IAAT,EAAeC,MAAf,QAA6B,SAA7B;AAEA,MAAMC,WAAW,GAAGR,MAAM,CAAC,GAAD,CAAN,CAClBM,IADkB,EAElBL,UAFkB,EAGlBC,UAHkB,EAIlBC,SAJkB,EAKlBC,UALkB,EAMlBC,aANkB,EAOlBE,MAAM,CAAC,MAAD,CAPY,CAApB;;AAUA,MAAME,IAAI,GAAG;AAAA,MAAC;AAAEC,IAAAA,OAAF;AAAW,OAAGC;AAAd,GAAD;AAAA,sBACX,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyBD,OAAzB,CADW;AAAA,CAAb;;AAIAD,IAAI,CAACG,SAAL,GAAiB;AACfF,EAAAA,OAAO,EAAEX,SAAS,CAACc,MADJ;AAEfC,EAAAA,EAAE,EAAEf,SAAS,CAACc,MAFC;AAGfZ,EAAAA,UAAU,EAAEF,SAAS,CAACgB,SAAV,CAAoB,CAC9BhB,SAAS,CAACc,MADoB,EAE9Bd,SAAS,CAACiB,MAFoB,EAG9BjB,SAAS,CAACkB,OAAV,CACElB,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACiB,MAA7B,CAApB,CADF,CAH8B,CAApB,CAHG;AAUfd,EAAAA,UAAU,EAAEH,SAAS,CAACgB,SAAV,CAAoB,CAC9BhB,SAAS,CAACc,MADoB,EAE9Bd,SAAS,CAACiB,MAFoB,EAG9BjB,SAAS,CAACkB,OAAV,CACElB,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACiB,MAA7B,CAApB,CADF,CAH8B,CAApB,CAVG;AAiBfb,EAAAA,SAAS,EAAEJ,SAAS,CAACgB,SAAV,CAAoB,CAC7BhB,SAAS,CAACc,MADmB,EAE7Bd,SAAS,CAACiB,MAFmB,EAG7BjB,SAAS,CAACkB,OAAV,CACElB,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACiB,MAA7B,CAApB,CADF,CAH6B,CAApB,CAjBI;AAwBfZ,EAAAA,UAAU,EAAEL,SAAS,CAACgB,SAAV,CAAoB,CAC9BhB,SAAS,CAACc,MADoB,EAE9Bd,SAAS,CAACiB,MAFoB,EAG9BjB,SAAS,CAACkB,OAAV,CACElB,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACiB,MAA7B,CAApB,CADF,CAH8B,CAApB,CAxBG;AA+BfX,EAAAA,aAAa,EAAEN,SAAS,CAACgB,SAAV,CAAoB,CACjChB,SAAS,CAACc,MADuB,EAEjCd,SAAS,CAACiB,MAFuB,EAGjCjB,SAAS,CAACkB,OAAV,CACElB,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACiB,MAA7B,CAApB,CADF,CAHiC,CAApB,CA/BA;AAsCf,KAAGV,IAAI,CAACM;AAtCO,CAAjB;AAyCAH,IAAI,CAACS,YAAL,GAAoB;AAClBJ,EAAAA,EAAE,EAAE,GADc;AAElBK,EAAAA,CAAC,EAAE;AAFe,CAApB;AAKA,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst TextWrapper = styled('p')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Text')\n);\n\nconst Text = ({ content, ...props }) => (\n  <TextWrapper {...props}>{content}</TextWrapper>\n);\n\nText.propTypes = {\n  content: PropTypes.string,\n  as: PropTypes.string,\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nText.defaultProps = {\n  as: 'p',\n  m: 0,\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}