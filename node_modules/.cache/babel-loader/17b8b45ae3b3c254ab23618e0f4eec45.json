{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Desktop\\\\hotel\\\\src\\\\container\\\\AddListing\\\\BasicInformation.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nconst BasicInformation = _ref => {\n  var _errors$pricePerNight, _errors$pricePerNight2;\n\n  let {\n    setStep\n  } = _ref;\n  const {\n    action,\n    state\n  } = useStateMachine(AddListingAction);\n  const {\n    control,\n    register,\n    errors,\n    setValue,\n    handleSubmit\n  } = useForm();\n  const [quantity, setQuantity] = useState({\n    guest: 0,\n    bed: 0\n  });\n  useEffect(() => {\n    register({\n      name: 'guest'\n    }, {\n      required: true\n    });\n    register({\n      name: 'bed'\n    }, {\n      required: true\n    });\n  }, [register]);\n\n  const handleOnChange = key => event => {\n    setQuantity({ ...quantity,\n      [key]: event.target.value\n    });\n    setValue([key], event.target.value);\n  };\n\n  const handleIncrement = key => {\n    setQuantity({ ...quantity,\n      [key]: ++quantity[key]\n    });\n    setValue([key], ++quantity[key]);\n  };\n\n  const handleDecrement = key => {\n    if (quantity[key] <= 0) {\n      return false;\n    }\n\n    setQuantity({ ...quantity,\n      [key]: --quantity[key]\n    });\n    setValue([key], --quantity[key]);\n  };\n\n  const onSubmit = data => {\n    action(data);\n    setStep(2);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Step 1: Start with the basics\")), /*#__PURE__*/React.createElement(_Row, {\n    gutter: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Hotel Name\",\n    htmlFor: \"hotelName\",\n    error: errors.hotelName && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 42\n      }\n    }, \"This field is required!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }),\n    id: \"hotelName\",\n    name: \"hotelName\",\n    defaultValue: state.data.hotelName,\n    control: control,\n    placeholder: \"Write your hotel name here\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(_Col, {\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Price Per Night (USD)\",\n    htmlFor: \"pricePerNight\",\n    error: errors.pricePerNight && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$pricePerNight = errors.pricePerNight) === null || _errors$pricePerNight === void 0 ? void 0 : _errors$pricePerNight.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, \"This field is required!\"), ((_errors$pricePerNight2 = errors.pricePerNight) === null || _errors$pricePerNight2 === void 0 ? void 0 : _errors$pricePerNight2.type) === 'pattern' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, \"Please enter only number!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }),\n    id: \"pricePerNight\",\n    name: \"pricePerNight\",\n    defaultValue: state.data.pricePerNight,\n    control: control,\n    placeholder: \"00.00\",\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Hotel Description\",\n    htmlFor: \"hotelDescription\",\n    error: errors.hotelDescription && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 40\n      }\n    }, \"This field is required!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input.TextArea, {\n      rows: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }),\n    id: \"hotelDescription\",\n    name: \"hotelDescription\",\n    defaultValue: state.data.hotelDescription,\n    control: control,\n    placeholder: \"Tell people about your hotel, room, location & amenities\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"How many guests can your hotel accommodate?\",\n    error: errors.guest && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 34\n      }\n    }, \"This field is required!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputIncDec, {\n    name: \"guest\",\n    value: quantity.guest,\n    onChange: handleOnChange('guest'),\n    increment: () => handleIncrement('guest'),\n    decrement: () => handleDecrement('guest'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"How many beds can guests use?\",\n    error: errors.bed && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 32\n      }\n    }, \"This field is required!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputIncDec, {\n    name: \"bed\",\n    value: quantity.bed,\n    onChange: handleOnChange('bed'),\n    increment: () => handleIncrement('bed'),\n    decrement: () => handleDecrement('bed'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(FormAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n};\n\nexport default BasicInformation;","map":{"version":3,"sources":["C:/Users/Talha/Desktop/hotel/src/container/AddListing/BasicInformation.js"],"names":["React","useState","useEffect","useStateMachine","useForm","Controller","InputIncDec","FormControl","AddListingAction","FormHeader","Title","FormContent","FormAction","BasicInformation","setStep","action","state","control","register","errors","setValue","handleSubmit","quantity","setQuantity","guest","bed","name","required","handleOnChange","key","event","target","value","handleIncrement","handleDecrement","onSubmit","data","hotelName","pricePerNight","type","pattern","hotelDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Input, InputNumber, Button } from 'antd';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nconst BasicInformation = ({ setStep }) => {\n  const { action, state } = useStateMachine(AddListingAction);\n  const { control, register, errors, setValue, handleSubmit } = useForm();\n  const [quantity, setQuantity] = useState({\n    guest: 0,\n    bed: 0,\n  });\n  useEffect(() => {\n    register({ name: 'guest' }, { required: true });\n    register({ name: 'bed' }, { required: true });\n  }, [register]);\n\n  const handleOnChange = (key) => (event) => {\n    setQuantity({\n      ...quantity,\n      [key]: event.target.value,\n    });\n    setValue([key], event.target.value);\n  };\n\n  const handleIncrement = (key) => {\n    setQuantity({\n      ...quantity,\n      [key]: ++quantity[key],\n    });\n    setValue([key], ++quantity[key]);\n  };\n\n  const handleDecrement = (key) => {\n    if (quantity[key] <= 0) {\n      return false;\n    }\n    setQuantity({\n      ...quantity,\n      [key]: --quantity[key],\n    });\n    setValue([key], --quantity[key]);\n  };\n\n  const onSubmit = (data) => {\n    action(data);\n    setStep(2);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormContent>\n        <FormHeader>\n          <Title>Step 1: Start with the basics</Title>\n        </FormHeader>\n        <Row gutter={30}>\n          <Col sm={12}>\n            <FormControl\n              label=\"Hotel Name\"\n              htmlFor=\"hotelName\"\n              error={errors.hotelName && <span>This field is required!</span>}\n            >\n              <Controller\n                as={<Input />}\n                id=\"hotelName\"\n                name=\"hotelName\"\n                defaultValue={state.data.hotelName}\n                control={control}\n                placeholder=\"Write your hotel name here\"\n                rules={{\n                  required: true,\n                }}\n              />\n            </FormControl>\n          </Col>\n          <Col sm={12}>\n            <FormControl\n              label=\"Price Per Night (USD)\"\n              htmlFor=\"pricePerNight\"\n              error={\n                errors.pricePerNight && (\n                  <>\n                    {errors.pricePerNight?.type === 'required' && (\n                      <span>This field is required!</span>\n                    )}\n                    {errors.pricePerNight?.type === 'pattern' && (\n                      <span>Please enter only number!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                as={<InputNumber />}\n                id=\"pricePerNight\"\n                name=\"pricePerNight\"\n                defaultValue={state.data.pricePerNight}\n                control={control}\n                placeholder=\"00.00\"\n                rules={{\n                  required: true,\n                  pattern: /^[0-9]*$/,\n                }}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <FormControl\n          label=\"Hotel Description\"\n          htmlFor=\"hotelDescription\"\n          error={\n            errors.hotelDescription && <span>This field is required!</span>\n          }\n        >\n          <Controller\n            as={<Input.TextArea rows={5} />}\n            id=\"hotelDescription\"\n            name=\"hotelDescription\"\n            defaultValue={state.data.hotelDescription}\n            control={control}\n            placeholder=\"Tell people about your hotel, room, location & amenities\"\n            rules={{\n              required: true,\n            }}\n          />\n        </FormControl>\n        <FormControl\n          label=\"How many guests can your hotel accommodate?\"\n          error={errors.guest && <span>This field is required!</span>}\n        >\n          <InputIncDec\n            name=\"guest\"\n            value={quantity.guest}\n            onChange={handleOnChange('guest')}\n            increment={() => handleIncrement('guest')}\n            decrement={() => handleDecrement('guest')}\n          />\n        </FormControl>\n        <FormControl\n          label=\"How many beds can guests use?\"\n          error={errors.bed && <span>This field is required!</span>}\n        >\n          <InputIncDec\n            name=\"bed\"\n            value={quantity.bed}\n            onChange={handleOnChange('bed')}\n            increment={() => handleIncrement('bed')}\n            decrement={() => handleDecrement('bed')}\n          />\n        </FormControl>\n      </FormContent>\n      <FormAction>\n        <div className=\"inner-wrapper\">\n          <Button type=\"primary\" htmlType=\"submit\">\n            Next\n          </Button>\n        </div>\n      </FormAction>\n    </form>\n  );\n};\n\nexport default BasicInformation;\n"]},"metadata":{},"sourceType":"module"}