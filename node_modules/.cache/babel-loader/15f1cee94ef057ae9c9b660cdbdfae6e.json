{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style/css\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Desktop\\\\hotel\\\\src\\\\container\\\\Auth\\\\SignUp\\\\SignUpForm.js\";\nimport React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { MdLockOpen } from \"react-icons/md\";\nimport FormControl from \"components/UI/FormControl/FormControl\";\nimport { AuthContext } from \"context/AuthProvider\";\nimport { FieldWrapper, SwitchWrapper, Label } from \"../Auth.style\";\n\nconst SignUpForm = () => {\n  var _errors$username, _errors$email, _errors$email2, _errors$password, _errors$password2, _errors$password3;\n\n  const {\n    signUp,\n    loggedIn\n  } = useContext(AuthContext);\n  const {\n    control,\n    watch,\n    errors,\n    handleSubmit\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const password = watch(\"password\");\n  const confirmPassword = watch(\"confirmPassword\");\n\n  const onSubmit = data => {\n    signUp(data);\n  };\n\n  if (loggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Username\",\n    htmlFor: \"username\",\n    error: errors.username && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.type) === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"This field is required!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }),\n    id: \"username\",\n    name: \"username\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Email\",\n    htmlFor: \"email\",\n    error: errors.email && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"pattern\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Please enter a valid email address!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }),\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Phone number\",\n    htmlFor: \"phone\" // error={\n    //   errors.phone && (\n    //     <>\n    //       {errors.email?.type === 'required' && (\n    //         <span>This field is required!</span>\n    //       )}\n    //       {errors.email?.type === 'pattern' && (\n    //         <span>Please enter a valid email address!</span>\n    //       )}\n    //     </>\n    //   )\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }),\n    type: \"phone\",\n    id: \"phone\",\n    name: \"phone\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true // pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Password\",\n    htmlFor: \"password\",\n    error: errors.password && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === \"minLength\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Password must be at lest 6 characters!\"), ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === \"maxLength\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Password must not be longer than 20 characters!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }),\n    defaultValue: \"\",\n    control: control,\n    id: \"password\",\n    name: \"password\",\n    rules: {\n      required: true,\n      minLength: 6,\n      maxLength: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Confirm password\",\n    htmlFor: \"confirmPassword\",\n    error: confirmPassword && password !== confirmPassword && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"Your password is not same!\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }),\n    defaultValue: \"\",\n    control: control,\n    id: \"confirmPassword\",\n    name: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SwitchWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }),\n    name: \"rememberMe\",\n    defaultValue: false,\n    valueName: \"checked\",\n    control: control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Remember Me\")), /*#__PURE__*/React.createElement(SwitchWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }),\n    name: \"termsAndConditions\",\n    defaultValue: false,\n    valueName: \"checked\",\n    control: control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"I agree with terms and conditions\"))), /*#__PURE__*/React.createElement(_Button, {\n    className: \"signin-btn\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MdLockOpen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }), \"Register\"));\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["C:/Users/Talha/Desktop/hotel/src/container/Auth/SignUp/SignUpForm.js"],"names":["React","useContext","Redirect","useForm","Controller","MdLockOpen","FormControl","AuthContext","FieldWrapper","SwitchWrapper","Label","SignUpForm","signUp","loggedIn","control","watch","errors","handleSubmit","mode","password","confirmPassword","onSubmit","data","pathname","username","type","required","email","pattern","minLength","maxLength","width"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { MdLockOpen } from \"react-icons/md\";\nimport { Input, Switch, Button } from \"antd\";\nimport FormControl from \"components/UI/FormControl/FormControl\";\nimport { AuthContext } from \"context/AuthProvider\";\nimport { FieldWrapper, SwitchWrapper, Label } from \"../Auth.style\";\n\nconst SignUpForm = () => {\n  const { signUp, loggedIn } = useContext(AuthContext);\n  const { control, watch, errors, handleSubmit } = useForm({\n    mode: \"onChange\",\n  });\n  const password = watch(\"password\");\n  const confirmPassword = watch(\"confirmPassword\");\n  const onSubmit = (data) => {\n    signUp(data);\n  };\n  if (loggedIn) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Username\"\n        htmlFor=\"username\"\n        error={\n          errors.username && (\n            <>\n              {errors.username?.type === \"required\" && (\n                <span>This field is required!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          id=\"username\"\n          name=\"username\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Email\"\n        htmlFor=\"email\"\n        error={\n          errors.email && (\n            <>\n              {errors.email?.type === \"required\" && (\n                <span>This field is required!</span>\n              )}\n              {errors.email?.type === \"pattern\" && (\n                <span>Please enter a valid email address!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n            pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Phone number\"\n        htmlFor=\"phone\"\n        // error={\n        //   errors.phone && (\n        //     <>\n        //       {errors.email?.type === 'required' && (\n        //         <span>This field is required!</span>\n        //       )}\n        //       {errors.email?.type === 'pattern' && (\n        //         <span>Please enter a valid email address!</span>\n        //       )}\n        //     </>\n        //   )\n        // }\n      >\n        <Controller\n          as={<Input />}\n          type=\"phone\"\n          id=\"phone\"\n          name=\"phone\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n            // pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Password\"\n        htmlFor=\"password\"\n        error={\n          errors.password && (\n            <>\n              {errors.password?.type === \"required\" && (\n                <span>This field is required!</span>\n              )}\n              {errors.password?.type === \"minLength\" && (\n                <span>Password must be at lest 6 characters!</span>\n              )}\n              {errors.password?.type === \"maxLength\" && (\n                <span>Password must not be longer than 20 characters!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input.Password />}\n          defaultValue=\"\"\n          control={control}\n          id=\"password\"\n          name=\"password\"\n          rules={{ required: true, minLength: 6, maxLength: 20 }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Confirm password\"\n        htmlFor=\"confirmPassword\"\n        error={\n          confirmPassword &&\n          password !== confirmPassword && (\n            <span>Your password is not same!</span>\n          )\n        }\n      >\n        <Controller\n          as={<Input.Password />}\n          defaultValue=\"\"\n          control={control}\n          id=\"confirmPassword\"\n          name=\"confirmPassword\"\n        />\n      </FormControl>\n      <FieldWrapper>\n        <SwitchWrapper>\n          <Controller\n            as={<Switch />}\n            name=\"rememberMe\"\n            defaultValue={false}\n            valueName=\"checked\"\n            control={control}\n          />\n          <Label>Remember Me</Label>\n        </SwitchWrapper>\n        <SwitchWrapper>\n          <Controller\n            as={<Switch />}\n            name=\"termsAndConditions\"\n            defaultValue={false}\n            valueName=\"checked\"\n            control={control}\n          />\n          <Label>I agree with terms and conditions</Label>\n        </SwitchWrapper>\n      </FieldWrapper>\n      <Button\n        className=\"signin-btn\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        style={{ width: \"100%\" }}\n      >\n        <MdLockOpen />\n        Register\n      </Button>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}