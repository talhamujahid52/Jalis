{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Downloads\\\\Latest_themeforest-Tripfinder-react-next-Template\\\\TripFinder - React Next Hotel Template\\\\TripFinder\\\\packages\\\\hotel\\\\src\\\\components\\\\ProductCard\\\\ProductCard.js\";\nimport React from 'react';\nimport { FiExternalLink } from 'react-icons/fi';\nimport TextLink from 'components/UI/TextLink/TextLink';\nimport Rating from 'components/UI/Rating/Rating';\nimport Favourite from 'components/UI/Favorite/Favorite';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport GridCard from '../GridCard/GridCard';\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1,\n    paritialVisibilityGutter: 40\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    paritialVisibilityGutter: 30\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1,\n    paritialVisibilityGutter: 30\n  }\n};\n\nconst PostGrid = _ref => {\n  let {\n    title,\n    rating,\n    location,\n    price,\n    ratingCount,\n    gallery,\n    slug,\n    link\n  } = _ref;\n  return /*#__PURE__*/React.createElement(GridCard, {\n    isCarousel: true,\n    favorite: /*#__PURE__*/React.createElement(Favourite, {\n      onClick: event => {\n        console.log(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }),\n    location: location.formattedAddress,\n    title: /*#__PURE__*/React.createElement(TextLink, {\n      link: \"\".concat(link, \"/\").concat(slug),\n      content: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }\n    }),\n    price: \"$\".concat(price, \"/Night - Free Cancellation\"),\n    rating: /*#__PURE__*/React.createElement(Rating, {\n      rating: rating,\n      ratingCount: ratingCount,\n      type: \"bulk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }),\n    viewDetailsBtn: /*#__PURE__*/React.createElement(TextLink, {\n      link: \"\".concat(link, \"/\").concat(slug),\n      icon: /*#__PURE__*/React.createElement(FiExternalLink, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }),\n      content: \"View Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    additionalTransfrom: 0,\n    arrows: true,\n    autoPlaySpeed: 3000,\n    containerClass: \"container\",\n    dotListClass: \"\",\n    draggable: true,\n    focusOnSelect: false,\n    infinite: true,\n    itemClass: \"\",\n    renderDotsOutside: false,\n    responsive: responsive,\n    showDots: true,\n    sliderClass: \"\",\n    slidesToSlide: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, gallery.map((_ref2, index) => {\n    let {\n      url,\n      title\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: url,\n      alt: title,\n      key: index,\n      draggable: false,\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nexport default PostGrid;","map":{"version":3,"sources":["C:/Users/Talha/Downloads/Latest_themeforest-Tripfinder-react-next-Template/TripFinder - React Next Hotel Template/TripFinder/packages/hotel/src/components/ProductCard/ProductCard.js"],"names":["React","FiExternalLink","TextLink","Rating","Favourite","Carousel","GridCard","responsive","desktop","breakpoint","max","min","items","paritialVisibilityGutter","mobile","tablet","PostGrid","title","rating","location","price","ratingCount","gallery","slug","link","event","console","log","formattedAddress","map","index","url","width","height","objectFit","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FiExternalLink } from 'react-icons/fi';\nimport TextLink from 'components/UI/TextLink/TextLink';\nimport Rating from 'components/UI/Rating/Rating';\nimport Favourite from 'components/UI/Favorite/Favorite';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport GridCard from '../GridCard/GridCard';\n\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024,\n    },\n    items: 1,\n    paritialVisibilityGutter: 40,\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0,\n    },\n    items: 1,\n    paritialVisibilityGutter: 30,\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464,\n    },\n    items: 1,\n    paritialVisibilityGutter: 30,\n  },\n};\n\nconst PostGrid = ({\n  title,\n  rating,\n  location,\n  price,\n  ratingCount,\n  gallery,\n  slug,\n  link,\n}) => {\n  return (\n    <GridCard\n      isCarousel={true}\n      favorite={\n        <Favourite\n          onClick={event => {\n            console.log(event);\n          }}\n        />\n      }\n      location={location.formattedAddress}\n      title={<TextLink link={`${link}/${slug}`} content={title} />}\n      price={`$${price}/Night - Free Cancellation`}\n      rating={<Rating rating={rating} ratingCount={ratingCount} type=\"bulk\" />}\n      viewDetailsBtn={\n        <TextLink\n          link={`${link}/${slug}`}\n          icon={<FiExternalLink />}\n          content=\"View Details\"\n        />\n      }\n    >\n      <Carousel\n        additionalTransfrom={0}\n        arrows\n        autoPlaySpeed={3000}\n        containerClass=\"container\"\n        dotListClass=\"\"\n        draggable\n        focusOnSelect={false}\n        infinite\n        itemClass=\"\"\n        renderDotsOutside={false}\n        responsive={responsive}\n        showDots={true}\n        sliderClass=\"\"\n        slidesToSlide={1}\n      >\n        {gallery.map(({ url, title }, index) => (\n          <img\n            src={url}\n            alt={title}\n            key={index}\n            draggable={false}\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              position: 'relative',\n            }}\n          />\n        ))}\n      </Carousel>\n    </GridCard>\n  );\n};\n\nexport default PostGrid;\n"]},"metadata":{},"sourceType":"module"}