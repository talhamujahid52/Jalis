{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Desktop\\\\hotel\\\\src\\\\components\\\\ImageCard\\\\ImageCard.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ImageCardWrapper, { ContentWrapper, Title, Meta } from \"./ImageCard.style\";\n\nconst ImageCard = _ref => {\n  let {\n    className,\n    imageSrc,\n    title,\n    link,\n    meta\n  } = _ref;\n  // Add all classs to an array\n  const addAllClasses = [\"image_card\"]; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <ImageCardWrapper className={addAllClasses.join(\" \")}>\n    React.createElement(ImageCardWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imageSrc,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ContentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, title && /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, title), meta && /*#__PURE__*/React.createElement(Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }\n    }, meta))))\n  );\n};\n\nImageCard.propTypes = {\n  className: PropTypes.string,\n  imageSrc: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n  meta: PropTypes.string\n};\nImageCard.defaultProps = {\n  link: \"#\"\n};\nexport default ImageCard;","map":{"version":3,"sources":["C:/Users/Talha/Desktop/hotel/src/components/ImageCard/ImageCard.js"],"names":["React","PropTypes","Link","ImageCardWrapper","ContentWrapper","Title","Meta","ImageCard","className","imageSrc","title","link","meta","addAllClasses","push","propTypes","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,gBAAP,IACEC,cADF,EAEEC,KAFF,EAGEC,IAHF,QAIO,mBAJP;;AAMA,MAAMC,SAAS,GAAG,QAAgD;AAAA,MAA/C;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA;AAApC,GAA+C;AAChE;AACA,QAAMC,aAAa,GAAG,CAAC,YAAD,CAAtB,CAFgE,CAIhE;;AACA,MAAIL,SAAJ,EAAe;AACbK,IAAAA,aAAa,CAACC,IAAd,CAAmBN,SAAnB;AACD;;AAED;AAAA;AACE;AACA,wBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEG,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEF,QAAV;AAAoB,MAAA,GAAG,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,iBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,KAAR,CADZ,EAEGE,IAAI,iBAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAP,CAFX,CAFF,CADF;AAFF;AAYD,CArBD;;AAuBAL,SAAS,CAACQ,SAAV,GAAsB;AACpBP,EAAAA,SAAS,EAAEP,SAAS,CAACe,MADD;AAEpBP,EAAAA,QAAQ,EAAER,SAAS,CAACe,MAFA;AAGpBN,EAAAA,KAAK,EAAET,SAAS,CAACe,MAHG;AAIpBL,EAAAA,IAAI,EAAEV,SAAS,CAACe,MAJI;AAKpBJ,EAAAA,IAAI,EAAEX,SAAS,CAACe;AALI,CAAtB;AAQAT,SAAS,CAACU,YAAV,GAAyB;AACvBN,EAAAA,IAAI,EAAE;AADiB,CAAzB;AAIA,eAAeJ,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport ImageCardWrapper, {\n  ContentWrapper,\n  Title,\n  Meta,\n} from \"./ImageCard.style\";\n\nconst ImageCard = ({ className, imageSrc, title, link, meta }) => {\n  // Add all classs to an array\n  const addAllClasses = [\"image_card\"];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    // <ImageCardWrapper className={addAllClasses.join(\" \")}>\n    <ImageCardWrapper>\n      <Link to={link}>\n        <img src={imageSrc} alt={title} />\n        <ContentWrapper>\n          {title && <Title>{title}</Title>}\n          {meta && <Meta>{meta}</Meta>}\n        </ContentWrapper>\n      </Link>\n    </ImageCardWrapper>\n  );\n};\n\nImageCard.propTypes = {\n  className: PropTypes.string,\n  imageSrc: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n  meta: PropTypes.string,\n};\n\nImageCard.defaultProps = {\n  link: \"#\",\n};\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}