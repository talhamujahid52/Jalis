{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style/css\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"C:\\\\Users\\\\Talha\\\\Downloads\\\\Latest_themeforest-Tripfinder-react-next-Template\\\\TripFinder - React Next Hotel Template\\\\TripFinder\\\\packages\\\\hotel\\\\src\\\\container\\\\Auth\\\\SignIn\\\\SignInForm.js\";\nimport React, { useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\n\nconst SignInForm = () => {\n  var _errors$email, _errors$email2, _errors$password, _errors$password2, _errors$password3;\n\n  const {\n    signIn,\n    loggedIn\n  } = useContext(AuthContext);\n  const {\n    control,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    signIn(data);\n  };\n\n  if (loggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Email\",\n    htmlFor: \"email\",\n    error: errors.email && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Please enter a valid email address!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }),\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: \"Password\",\n    htmlFor: \"password\",\n    error: errors.password && /*#__PURE__*/React.createElement(React.Fragment, null, ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === 'minLength' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Password must be at lest 6 characters!\"), ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === 'maxLength' && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Password must not be longer than 20 characters!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }),\n    defaultValue: \"\",\n    control: control,\n    id: \"password\",\n    name: \"password\",\n    rules: {\n      required: true,\n      minLength: 6,\n      maxLength: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SwitchWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(_Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }),\n    name: \"rememberMe\",\n    defaultValue: false,\n    valueName: \"checked\",\n    control: control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Remember Me\")), /*#__PURE__*/React.createElement(Link, {\n    to: FORGET_PASSWORD_PAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Forget Password ?\")), /*#__PURE__*/React.createElement(_Button, {\n    className: \"signin-btn\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MdLockOpen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), \"Login\"));\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["C:/Users/Talha/Downloads/Latest_themeforest-Tripfinder-react-next-Template/TripFinder - React Next Hotel Template/TripFinder/packages/hotel/src/container/Auth/SignIn/SignInForm.js"],"names":["React","useContext","Link","Redirect","useForm","Controller","MdLockOpen","FormControl","AuthContext","FORGET_PASSWORD_PAGE","FieldWrapper","SwitchWrapper","Label","SignInForm","signIn","loggedIn","control","errors","handleSubmit","onSubmit","data","pathname","email","type","required","pattern","password","minLength","maxLength","width"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport { Input, Switch, Button } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\n\nconst SignInForm = () => {\n  const { signIn, loggedIn } = useContext(AuthContext);\n  const { control, errors, handleSubmit } = useForm();\n  const onSubmit = (data) => {\n    signIn(data);\n  };\n  if (loggedIn) {\n    return <Redirect to={{ pathname: '/' }} />;\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        label=\"Email\"\n        htmlFor=\"email\"\n        error={\n          errors.email && (\n            <>\n              {errors.email?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.email?.type === 'pattern' && (\n                <span>Please enter a valid email address!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input />}\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          defaultValue=\"\"\n          control={control}\n          rules={{\n            required: true,\n            pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n          }}\n        />\n      </FormControl>\n      <FormControl\n        label=\"Password\"\n        htmlFor=\"password\"\n        error={\n          errors.password && (\n            <>\n              {errors.password?.type === 'required' && (\n                <span>This field is required!</span>\n              )}\n              {errors.password?.type === 'minLength' && (\n                <span>Password must be at lest 6 characters!</span>\n              )}\n              {errors.password?.type === 'maxLength' && (\n                <span>Password must not be longer than 20 characters!</span>\n              )}\n            </>\n          )\n        }\n      >\n        <Controller\n          as={<Input.Password />}\n          defaultValue=\"\"\n          control={control}\n          id=\"password\"\n          name=\"password\"\n          rules={{ required: true, minLength: 6, maxLength: 20 }}\n        />\n      </FormControl>\n      <FieldWrapper>\n        <SwitchWrapper>\n          <Controller\n            as={<Switch />}\n            name=\"rememberMe\"\n            defaultValue={false}\n            valueName=\"checked\"\n            control={control}\n          />\n          <Label>Remember Me</Label>\n        </SwitchWrapper>\n        <Link to={FORGET_PASSWORD_PAGE}>Forget Password ?</Link>\n      </FieldWrapper>\n      <Button\n        className=\"signin-btn\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        size=\"large\"\n        style={{ width: '100%' }}\n      >\n        <MdLockOpen />\n        Login\n      </Button>\n    </form>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}